{"version":3,"sources":["components/shaders/WaterPass.js","state.js","components/Effects.js","components/Text.js","components/Geo.js","App.js","index.js"],"names":["WaterShader","byp","value","tex","type","time","factor","resolution","WaterPass","dt_size","uniforms","THREE","clone","undefined","material","vertexShader","fragmentShader","camera","scene","quad","frustumCulled","add","renderer","writeBuffer","readBuffer","deltaTime","maskActive","Math","max","this","texture","renderToScreen","setRenderTarget","render","clear","Pass","state","top","pages","threshold","mouse","content","tag","text","images","depthbox","depth","color","textColor","image","lines","points","lineWidth","Effects","composer","useRef","water","useThree","gl","size","useEffect","current","setSize","width","height","last","index","values","useFrame","abs","normalize","reduce","a","b","length","lerp","autoClear","ref","args","attachArray","GammaCorrectionShader","extend","EffectComposer","ShaderPass","RenderPass","Text","bold","anchorX","anchorY","textAlign","props","reflow","useReflow","font","onSync","Model","group","shadow","nodes","useGLTF","clock","t","sin","getElapsedTime","position","y","scale","z","x","rotation","dispose","geometry","geo","castShadow","receiveShadow","MeshDistortMaterial","flatShading","roughness","metalness","speed","wireframe","fontSize","lineHeight","letterSpacing","toneMapped","Shadow","opacity","PI","HeightReporter","onReflow","useFlexSize","useLayoutEffect","Page","textScaleFactor","left","textures","useLoader","viewport","boxProps","centerAnchor","grow","marginTop","marginLeft","marginRight","minWidth","minHeight","maxWidth","maxHeight","dir","align","justify","margin","wrap","map","marginBottom","Layercard","boxWidth","boxHeight","pageLerp","page","transparent","Content","useAspect","bW","bH","vec","sticky","set","handleReflow","useCallback","w","h","sizesRef","min","acc","e","Line","App","scrollArea","onScroll","target","scrollTop","useState","setPages","shadows","raycaster","enabled","dpr","far","powerPreference","alpha","antialias","stencil","onCreated","setClearColor","intensity","angle","penumbra","fallback","className","onPointerMove","clientX","window","innerWidth","clientY","innerHeight","style","Loader","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6218676.chunk.js","sourcesContent":["/**  @author vergil Wang */\n\nimport * as THREE from 'three'\nimport { Pass } from 'three/examples/jsm/postprocessing/Pass'\n\nconst WaterShader = {\n  uniforms: {\n    byp: { value: 0 },\n    tex: { type: 't', value: null },\n    time: { type: 'f', value: 0.0 },\n    factor: { type: 'f', value: 0.0 },\n    resolution: { type: 'v2', value: null },\n  },\n  vertexShader: `varying vec2 vUv;\n    void main(){  \n      vUv = uv; \n      vec4 modelViewPosition = modelViewMatrix * vec4(position, 1.0);\n      gl_Position = projectionMatrix * modelViewPosition;\n    }`,\n  fragmentShader: `\n  uniform int byp;\n    uniform float time;\n    uniform float factor;\n    uniform vec2 resolution;\n    uniform sampler2D tex;\n    varying vec2 vUv;\n    void main() { \n      if (byp<1) {\n        vec2 uv = vUv;\n        float frequency = 4.0;\n        float amplitude = 0.015 * factor;\n        float x = uv.y * frequency + time * .7; \n        float y = uv.x * frequency + time * .3;\n        uv.x += .5 * amplitude * cos(x);\n        uv.y += .5 * amplitude * sin(y);\n        vec4 rgba = texture2D(tex, uv);\n        gl_FragColor = rgba;\n      } else {\n        gl_FragColor = texture2D(tex, vUv);\n      }\n    }`,\n}\n\nclass WaterPass extends Pass {\n  constructor(dt_size) {\n    super()\n    this.uniforms = THREE.UniformsUtils.clone(WaterShader.uniforms)\n    if (dt_size === undefined) dt_size = 64\n    this.uniforms['resolution'].value = new THREE.Vector2(dt_size, dt_size)\n    this.material = new THREE.ShaderMaterial({\n      uniforms: this.uniforms,\n      vertexShader: WaterShader.vertexShader,\n      fragmentShader: WaterShader.fragmentShader,\n    })\n    this.camera = new THREE.OrthographicCamera(-1, 1, 1, -1, 0, 1)\n    this.scene = new THREE.Scene()\n    this.quad = new THREE.Mesh(new THREE.PlaneBufferGeometry(2, 2), null)\n    this.quad.frustumCulled = false // Avoid getting clipped\n    this.scene.add(this.quad)\n    this.factor = 0\n    this.time = 0\n  }\n\n  render(renderer, writeBuffer, readBuffer, deltaTime, maskActive) {\n    const factor = Math.max(0, this.factor)\n    this.uniforms['byp'].value = factor ? 0 : 1\n    this.uniforms['tex'].value = readBuffer.texture\n    this.uniforms['time'].value = this.time\n    this.uniforms['factor'].value = this.factor\n    this.time += 0.01\n    this.quad.material = this.material\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null)\n      renderer.render(this.scene, this.camera)\n    } else {\n      renderer.setRenderTarget(writeBuffer)\n      if (this.clear) renderer.clear()\n      renderer.render(this.scene, this.camera)\n    }\n  }\n}\n\nexport { WaterPass }\n","const state = {\n  top: 0,\n  pages: 0,\n  threshold: 4,\n  mouse: [0, 0],\n  content: [\n    {\n      tag: '00',\n      text: `The Bacchic\\nand Dionysiac\\nRites`,\n      images: ['/images/BH41NVu.jpg', '/images/fBoIJLX.jpg', '/images/04zTfWB.jpg'],\n    },\n    { tag: '01', text: `The Elysian\\nMysteries`, images: ['/images/c4cA8UN.jpg', '/images/ajQ73ol.jpg', '/images/gZOmLNU.jpg', '/images/ellipse.svg'] },\n    { tag: '02', text: `The Hiramic\\nLegend`, images: ['/images/mbFIW1b.jpg', '/images/mlDUVig.jpg', '/images/gwuZrgo.jpg'] },\n  ],\n  depthbox: [\n    {\n      depth: 0,\n      color: '#cccccc',\n      textColor: '#ffffff',\n      text: 'In a void,\\nno one could say\\nwhy a thing\\nonce set in motion\\nshould stop anywhere.',\n      image: '/images/cAKwexj.jpg',\n    },\n    {\n      depth: -5,\n      textColor: '#272727',\n      text: 'For why should it stop\\nhere rather than here?\\nSo that a thing\\nwill either be at rest\\nor must be moved\\nad infinitum.',\n      image: '/images/04zTfWB.jpg',\n    },\n  ],\n  lines: [\n    { points: [[-20, 0, 0], [-9, 0, 0]], color: \"black\", lineWidth: 0.5 },\n    { points: [[20, 0, 0], [9, 0, 0]], color: \"black\", lineWidth: 0.5 },\n  ]\n}\n\nexport default state\n","import * as THREE from 'three'\nimport React, { useEffect, useRef } from 'react'\nimport { extend, useThree, useFrame } from '@react-three/fiber'\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer'\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass'\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass'\nimport { GammaCorrectionShader } from 'three/examples/jsm/shaders/GammaCorrectionShader'\nimport { WaterPass } from './shaders/WaterPass'\nimport state from '../state'\n\nextend({ EffectComposer, ShaderPass, RenderPass, WaterPass })\n\nexport default function Effects() {\n  const composer = useRef()\n  const water = useRef()\n  const { gl, size, camera, scene } = useThree()\n  useEffect(() => void composer.current.setSize(size.width, size.height), [size])\n  let last = state.top\n  let index = 0\n  let values = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  useFrame(() => {\n    const { top } = state\n    values[index] = Math.abs(top - last)\n    const normalize = values.reduce((a, b) => a + b) / values.length\n    water.current.factor = THREE.MathUtils.lerp(water.current.factor, normalize / 20, 0.1)\n    last = top\n    index = (index + 1) % 10\n    gl.autoClear = true\n    composer.current.render()\n  }, 1)\n  return (\n    <effectComposer ref={composer} args={[gl]}>\n      <renderPass attachArray=\"passes\" scene={scene} camera={camera} />\n      <waterPass attachArray=\"passes\" ref={water} />\n      <shaderPass attachArray=\"passes\" args={[GammaCorrectionShader]} />\n    </effectComposer>\n  )\n}\n","import React from 'react'\nimport { useReflow } from '@react-three/flex'\nimport { Text as TextImpl } from '@react-three/drei'\n\nexport default function Text({ bold = false, anchorX = 'left', anchorY = 'top', textAlign = 'left', ...props }) {\n  const reflow = useReflow()\n  const font = bold ? '/Inter-Bold.woff' : '/Inter-Regular.woff'\n  return <TextImpl anchorX={anchorX} anchorY={anchorY} textAlign={textAlign} font={font} onSync={reflow} {...props} />\n}\n","import * as THREE from 'three'\nimport React, { useRef } from 'react'\nimport { useFrame } from '@react-three/fiber'\nimport { useGLTF, MeshDistortMaterial, Shadow } from '@react-three/drei'\nimport Text from './Text'\nimport state from '../state'\n\nexport default function Model(props) {\n  const group = useRef()\n  const shadow = useRef()\n  const { nodes } = useGLTF('/geo.min.glb', true)\n  useFrame(({ clock }) => {\n    const t = (1 + Math.sin(clock.getElapsedTime() * 1.5)) / 2\n    group.current.position.y = t / 3\n    shadow.current.scale.y = shadow.current.scale.z = 1 + t\n    shadow.current.scale.x = (1 + t) * 1.25\n    group.current.rotation.x = group.current.rotation.z += 0.005\n    group.current.position.x = THREE.MathUtils.lerp(group.current.position.x, state.mouse[0] / 2, 0.05)\n    group.current.position.z = THREE.MathUtils.lerp(group.current.position.z, state.mouse[1] / 4, 0.03)\n  })\n  return (\n    <group {...props} dispose={null}>\n      <group ref={group}>\n        <mesh geometry={nodes.geo.geometry} castShadow receiveShadow>\n          <MeshDistortMaterial color=\"#ffffff\" flatShading roughness={1} metalness={0.5} factor={15} speed={5} />\n        </mesh>\n        <mesh geometry={nodes.geo.geometry}>\n          <meshBasicMaterial wireframe />\n        </mesh>\n      </group>\n      <group position={[1.25, -0.5, 0]}>\n        <Text position={[0, 0, 0]} fontSize={0.07} lineHeight={1} letterSpacing={-0.05}>\n          03\n          <meshBasicMaterial color=\"#cccccc\" toneMapped={false} />\n        </Text>\n        <Text bold position={[-0.01, -0.1, 0]} fontSize={0.1} lineHeight={1} letterSpacing={-0.05} color=\"black\">\n          {`Poimandres,\\nThe vision of Hermes`}\n        </Text>\n      </group>\n      <Shadow ref={shadow} opacity={0.3} rotation-x={-Math.PI / 2} position={[0, -1.51, 0]} />\n    </group>\n  )\n}\n","import * as THREE from 'three'\nimport React, { Suspense, useEffect, useRef, useState, useCallback, useLayoutEffect } from 'react'\nimport { Canvas, useThree, useFrame, useLoader } from '@react-three/fiber'\nimport { Flex, Box, useFlexSize } from '@react-three/flex'\nimport { Loader, Line, useAspect } from '@react-three/drei'\nimport Effects from './components/Effects'\nimport Text from './components/Text'\nimport Geo from './components/Geo'\nimport state from './state'\n\nfunction HeightReporter({ onReflow }) {\n  const size = useFlexSize()\n  useLayoutEffect(() => onReflow && onReflow(...size), [onReflow, size])\n  return null\n}\n\nfunction Page({ text, tag, images, textScaleFactor, onReflow, left = false }) {\n  const textures = useLoader(THREE.TextureLoader, images)\n  const { viewport } = useThree()\n  const boxProps = {\n    centerAnchor: true,\n    grow: 1,\n    marginTop: 1,\n    marginLeft: left * 1,\n    marginRight: !left * 1,\n    width: 'auto',\n    height: 'auto',\n    minWidth: 3,\n    minHeight: 3,\n    maxWidth: 6,\n    maxHeight: 6,\n  }\n  return (\n    <Box dir=\"column\" align={left ? 'flex-start' : 'flex-end'} justify=\"flex-start\" width=\"100%\" height=\"auto\" minHeight=\"100%\">\n      <HeightReporter onReflow={onReflow} />\n      <Box dir=\"row\" width=\"100%\" height=\"auto\" justify={left ? 'flex-end' : 'flex-start'} margin={0} grow={1} wrap=\"wrap\">\n        {textures.map((texture, index) => (\n          <Box key={index} {...boxProps}>\n            {(width, height) => (\n              <mesh>\n                <planeBufferGeometry args={[width, height]} />\n                <meshBasicMaterial map={texture} toneMapped={false} />\n              </mesh>\n            )}\n          </Box>\n        ))}\n      </Box>\n      <Box marginLeft={1.5} marginRight={1.5} marginTop={2}>\n        <Text position={[left ? 1 : -1, 0.5, 1]} fontSize={textScaleFactor} lineHeight={1} letterSpacing={-0.05} maxWidth={(viewport.width / 4) * 3}>\n          {tag}\n          <meshBasicMaterial color=\"#cccccc\" toneMapped={false} />\n        </Text>\n      </Box>\n      <Box marginLeft={left ? 1.5 : 1} marginRight={left ? 1 : 1.5} marginBottom={1}>\n        <Text\n          bold\n          position-z={0.5}\n          textAlign={left ? 'left' : 'right'}\n          fontSize={1.5 * textScaleFactor}\n          lineHeight={1}\n          letterSpacing={-0.05}\n          color=\"black\"\n          maxWidth={(viewport.width / 4) * 3}>\n          {text}\n        </Text>\n      </Box>\n    </Box>\n  )\n}\n\nfunction Layercard({ depth, boxWidth, boxHeight, text, textColor, color, map, textScaleFactor }) {\n  const ref = useRef()\n  const { viewport, size } = useThree()\n  const pageLerp = useRef(state.top / size.height)\n  useFrame(() => {\n    const page = (pageLerp.current = THREE.MathUtils.lerp(pageLerp.current, state.top / size.height, 0.15))\n    if (depth >= 0) ref.current.opacity = page < state.threshold * 1.7 ? 1 : 1 - (page - state.threshold * 1.7)\n  })\n  return (\n    <>\n      <mesh position={[boxWidth / 2, -boxHeight / 2, depth]}>\n        <planeBufferGeometry args={[boxWidth, boxHeight]} />\n        <meshBasicMaterial ref={ref} color={color} map={map} toneMapped={false} transparent opacity={1} />\n      </mesh>\n      <Text\n        bold\n        position={[boxWidth / 2, -boxHeight / 2, depth + 1.5]}\n        maxWidth={(viewport.width / 4) * 1}\n        anchorX=\"center\"\n        anchorY=\"middle\"\n        fontSize={0.6 * textScaleFactor}\n        lineHeight={1}\n        letterSpacing={-0.05}\n        color={textColor}>\n        {text}\n      </Text>\n    </>\n  )\n}\n\nfunction Content({ onReflow }) {\n  const group = useRef()\n  const { viewport, size } = useThree()\n  const [bW, bH] = useAspect(1920, 1920, 0.5)\n  const texture = useLoader(THREE.TextureLoader, state.depthbox[0].image)\n  const vec = new THREE.Vector3()\n  const pageLerp = useRef(state.top / size.height)\n  useFrame(() => {\n    const page = (pageLerp.current = THREE.MathUtils.lerp(pageLerp.current, state.top / size.height, 0.15))\n    const y = page * viewport.height\n    const sticky = state.threshold * viewport.height\n    group.current.position.lerp(vec.set(0, page < state.threshold ? y : sticky, page < state.threshold ? 0 : page * 1.25), 0.15)\n  })\n  const handleReflow = useCallback((w, h) => onReflow((state.pages = h / viewport.height + 5.5)), [onReflow, viewport.height])\n  const sizesRef = useRef([])\n  const scale = Math.min(1, viewport.width / 16)\n  return (\n    <group ref={group}>\n      <Flex dir=\"column\" position={[-viewport.width / 2, viewport.height / 2, 0]} size={[viewport.width, viewport.height, 0]} onReflow={handleReflow}>\n        {state.content.map((props, index) => (\n          <Page\n            key={index}\n            left={!(index % 2)}\n            textScaleFactor={scale}\n            onReflow={(w, h) => {\n              sizesRef.current[index] = h\n              state.threshold = Math.max(4, (4 / (15.8 * 3)) * sizesRef.current.reduce((acc, e) => acc + e, 0))\n            }}\n            {...props}\n          />\n        ))}\n        <Box dir=\"row\" width=\"100%\" height=\"100%\" align=\"center\" justify=\"center\">\n          <Box centerAnchor>\n            {state.lines.map((props, index) => (\n              <Line key={index} {...props} />\n            ))}\n            <Text\n              bold\n              position-z={0.5}\n              anchorX=\"center\"\n              anchorY=\"middle\"\n              fontSize={1.5 * scale}\n              lineHeight={1}\n              letterSpacing={-0.05}\n              color=\"black\"\n              maxWidth={(viewport.width / 4) * 3}>\n              {state.depthbox[0].text}\n            </Text>\n          </Box>\n        </Box>\n        <Box dir=\"row\" width=\"100%\" height=\"100%\" align=\"center\" justify=\"center\">\n          <Box>\n            <Layercard {...state.depthbox[0]} text={state.depthbox[1].text} boxWidth={bW} boxHeight={bH} map={texture} textScaleFactor={scale} />\n            <Geo position={[bW / 2, -bH / 2, state.depthbox[1].depth]} />\n          </Box>\n        </Box>\n      </Flex>\n    </group>\n  )\n}\n\nexport default function App() {\n  const scrollArea = useRef()\n  const onScroll = (e) => (state.top = e.target.scrollTop)\n  useEffect(() => void onScroll({ target: scrollArea.current }), [])\n  const [pages, setPages] = useState(0)\n  return (\n    <>\n      <Canvas\n        shadows\n        raycaster={{ enabled: false }}\n        dpr={[1, 2]}\n        camera={{ position: [0, 0, 10], far: 1000 }}\n        gl={{ powerPreference: 'high-performance', alpha: false, antialias: false, stencil: false, depth: false }}\n        onCreated={({ gl }) => gl.setClearColor('#f5f5f5')}>\n        <pointLight position={[-10, -10, -10]} intensity={1} />\n        <ambientLight intensity={0.4} />\n        <spotLight\n          castShadow\n          angle={0.3}\n          penumbra={1}\n          position={[0, 10, 20]}\n          intensity={5}\n          shadow-mapSize-width={1024}\n          shadow-mapSize-height={1024}\n        />\n        <Suspense fallback={null}>\n          <Content onReflow={setPages} />\n        </Suspense>\n        <Effects />\n      </Canvas>\n      <div\n        className=\"scrollArea\"\n        ref={scrollArea}\n        onScroll={onScroll}\n        onPointerMove={(e) => (state.mouse = [(e.clientX / window.innerWidth) * 2 - 1, (e.clientY / window.innerHeight) * 2 - 1])}>\n        <div style={{ height: `${pages * 100}vh` }} />\n      </div>\n      <Loader />\n    </>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}